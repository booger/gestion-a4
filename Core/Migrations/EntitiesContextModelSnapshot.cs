// <auto-generated />
using Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Core.Migrations
{
    [DbContext(typeof(EntitiesContext))]
    partial class EntitiesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Model.Articulo", b =>
                {
                    b.Property<long>("ArticuloID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Activo");

                    b.Property<string>("ArticuloCodigo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("CodBarraGenerado")
                        .HasMaxLength(50);

                    b.Property<string>("CodBarraOriginal")
                        .HasMaxLength(50);

                    b.Property<bool>("ControlaStock");

                    b.Property<decimal>("Costo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<decimal>("ImpuestosInternos");

                    b.Property<long>("LineaID");

                    b.Property<long>("MarcaID");

                    b.Property<decimal>("PuntoDePedido");

                    b.Property<decimal>("StockMaximo");

                    b.Property<decimal>("StockMinimo");

                    b.Property<decimal>("TamanoLotePedido");

                    b.HasKey("ArticuloID");

                    b.HasIndex("LineaID");

                    b.HasIndex("MarcaID");

                    b.ToTable("Articulos");
                });

            modelBuilder.Entity("Core.Model.Deposito", b =>
                {
                    b.Property<long>("DepositoID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodigoPostal")
                        .HasMaxLength(20);

                    b.Property<string>("DepositoCodigo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Domicilio")
                        .HasMaxLength(200);

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<string>("Telefonos")
                        .HasMaxLength(100);

                    b.HasKey("DepositoID");

                    b.ToTable("Depositos");
                });

            modelBuilder.Entity("Core.Model.Grupo", b =>
                {
                    b.Property<long>("GrupoID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("GrupoCodigo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("GrupoID");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("Core.Model.Linea", b =>
                {
                    b.Property<long>("LineaID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<long>("GrupoID");

                    b.Property<string>("LineaCodigo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("LineaID");

                    b.HasIndex("GrupoID");

                    b.ToTable("Lineas");
                });

            modelBuilder.Entity("Core.Model.Marca", b =>
                {
                    b.Property<long>("MarcaID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("MarcaCodigo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("MarcaID");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("Core.Model.Stock", b =>
                {
                    b.Property<long>("ArticuloID");

                    b.Property<long>("DepositoID");

                    b.Property<decimal>("Comprometido");

                    b.Property<decimal>("Existencia");

                    b.Property<decimal>("PedidoProv");

                    b.HasKey("ArticuloID", "DepositoID");

                    b.HasIndex("DepositoID");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("Core.Model.Articulo", b =>
                {
                    b.HasOne("Core.Model.Linea", "Linea")
                        .WithMany("Articulos")
                        .HasForeignKey("LineaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Core.Model.Marca", "Marca")
                        .WithMany("Articulos")
                        .HasForeignKey("MarcaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Core.Model.Linea", b =>
                {
                    b.HasOne("Core.Model.Grupo", "Grupo")
                        .WithMany("Lineas")
                        .HasForeignKey("GrupoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Core.Model.Stock", b =>
                {
                    b.HasOne("Core.Model.Articulo", "Articulo")
                        .WithMany("Stocks")
                        .HasForeignKey("ArticuloID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Core.Model.Deposito", "Deposito")
                        .WithMany("Stocks")
                        .HasForeignKey("DepositoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
